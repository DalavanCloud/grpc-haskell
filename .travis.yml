# See https://github.com/hvr/multi-ghc-travis for more information

language: c

dist: trusty
sudo: false

addons:
  apt:
    sources: &apt_sources
      - hvr-ghc
    packages: &apt_packages
      - build-essential
      - autoconf
      - libtool
      - libgflags-dev
      - libgtest-dev
      - libc++-dev

matrix:
  include:
    - env: CABALVER=1.24 GHCVER=7.10.3
      compiler: ": #GHC 7.10.3"
      addons: {apt: {packages: [*apt_packages, cabal-install-1.24, ghc-7.10.3], sources: [*apt_sources]}}
    - env: CABALVER=1.24 GHCVER=8.0.2
      compiler: ": #GHC 8.0.2"
      addons: {apt: {packages: [*apt_packages, cabal-install-1.24, ghc-8.0.2], sources: [*apt_sources]}}
    - env: CABALVER=head GHCVER=head
      compiler: ": #GHC head"
      addons: {apt: {packages: [*apt_packages, cabal-install-head, ghc-head],  sources: [*apt_sources]}}

  allow_failures:
    - env: CABALVER=head GHCVER=head

before_install:
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH
 - ghc --version
 - cabal --version
 - travis_retry cabal update
 # Unfortunately it seems we have to fetch the full repository to be able to
 # clone it to create our workspace. We would be OK with a shallow repository
 # if we could make git to clone it.
 - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi

install:
 - mkdir workspace
 - cp cabal.project.travis workspace/cabal.project
 - cd workspace
 - git clone --depth=1 .. grpc-haskell
 - git clone --depth=1 --recursive https://github.com/grpc/grpc grpc
 - cd grpc
 - make shared_c static_c -j
 # Disable interop_server for now.
 # - make interop_server -j1 # reduce memory footprint
 - cd ..
 - echo $(pwd)
 - cabal new-build --only-dependencies

script:
 - echo $(pwd)
 - ls -lah
 - cat cabal.project
 - cabal new-build -v

notifications:
  email:
    - kolmodin@google.com
